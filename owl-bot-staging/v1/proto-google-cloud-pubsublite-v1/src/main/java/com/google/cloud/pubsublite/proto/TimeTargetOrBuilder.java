// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/pubsublite/v1/common.proto

package com.google.cloud.pubsublite.proto;

public interface TimeTargetOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.pubsublite.v1.TimeTarget)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Request the cursor of the first message with publish time greater than or
   * equal to `publish_time`. All messages thereafter are guaranteed to have
   * publish times &gt;= `publish_time`.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp publish_time = 1;</code>
   * @return Whether the publishTime field is set.
   */
  boolean hasPublishTime();
  /**
   * <pre>
   * Request the cursor of the first message with publish time greater than or
   * equal to `publish_time`. All messages thereafter are guaranteed to have
   * publish times &gt;= `publish_time`.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp publish_time = 1;</code>
   * @return The publishTime.
   */
  com.google.protobuf.Timestamp getPublishTime();
  /**
   * <pre>
   * Request the cursor of the first message with publish time greater than or
   * equal to `publish_time`. All messages thereafter are guaranteed to have
   * publish times &gt;= `publish_time`.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp publish_time = 1;</code>
   */
  com.google.protobuf.TimestampOrBuilder getPublishTimeOrBuilder();

  /**
   * <pre>
   * Request the cursor of the first message with event time greater than or
   * equal to `event_time`. If messages are missing an event time, the publish
   * time is used as a fallback. As event times are user supplied, subsequent
   * messages may have event times less than `event_time` and should be
   * filtered by the client, if necessary.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp event_time = 2;</code>
   * @return Whether the eventTime field is set.
   */
  boolean hasEventTime();
  /**
   * <pre>
   * Request the cursor of the first message with event time greater than or
   * equal to `event_time`. If messages are missing an event time, the publish
   * time is used as a fallback. As event times are user supplied, subsequent
   * messages may have event times less than `event_time` and should be
   * filtered by the client, if necessary.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp event_time = 2;</code>
   * @return The eventTime.
   */
  com.google.protobuf.Timestamp getEventTime();
  /**
   * <pre>
   * Request the cursor of the first message with event time greater than or
   * equal to `event_time`. If messages are missing an event time, the publish
   * time is used as a fallback. As event times are user supplied, subsequent
   * messages may have event times less than `event_time` and should be
   * filtered by the client, if necessary.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp event_time = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getEventTimeOrBuilder();

  public com.google.cloud.pubsublite.proto.TimeTarget.TimeCase getTimeCase();
}
