/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/pubsublite/v1/topic_stats.proto

package com.google.cloud.pubsublite.proto;

public interface ComputeMessageStatsResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.pubsublite.v1.ComputeMessageStatsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The count of messages.
   * </pre>
   *
   * <code>int64 message_count = 1;</code>
   *
   * @return The messageCount.
   */
  long getMessageCount();

  /**
   *
   *
   * <pre>
   * The number of quota bytes accounted to these messages.
   * </pre>
   *
   * <code>int64 message_bytes = 2;</code>
   *
   * @return The messageBytes.
   */
  long getMessageBytes();

  /**
   *
   *
   * <pre>
   * The minimum publish timestamp across these messages. Note that publish
   * timestamps within a partition are non-decreasing. The timestamp will be
   * unset if there are no messages.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp minimum_publish_time = 3;</code>
   *
   * @return Whether the minimumPublishTime field is set.
   */
  boolean hasMinimumPublishTime();
  /**
   *
   *
   * <pre>
   * The minimum publish timestamp across these messages. Note that publish
   * timestamps within a partition are non-decreasing. The timestamp will be
   * unset if there are no messages.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp minimum_publish_time = 3;</code>
   *
   * @return The minimumPublishTime.
   */
  com.google.protobuf.Timestamp getMinimumPublishTime();
  /**
   *
   *
   * <pre>
   * The minimum publish timestamp across these messages. Note that publish
   * timestamps within a partition are non-decreasing. The timestamp will be
   * unset if there are no messages.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp minimum_publish_time = 3;</code>
   */
  com.google.protobuf.TimestampOrBuilder getMinimumPublishTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * The minimum event timestamp across these messages. For the purposes of this
   * computation, if a message does not have an event time, we use the publish
   * time. The timestamp will be unset if there are no messages.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp minimum_event_time = 4;</code>
   *
   * @return Whether the minimumEventTime field is set.
   */
  boolean hasMinimumEventTime();
  /**
   *
   *
   * <pre>
   * The minimum event timestamp across these messages. For the purposes of this
   * computation, if a message does not have an event time, we use the publish
   * time. The timestamp will be unset if there are no messages.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp minimum_event_time = 4;</code>
   *
   * @return The minimumEventTime.
   */
  com.google.protobuf.Timestamp getMinimumEventTime();
  /**
   *
   *
   * <pre>
   * The minimum event timestamp across these messages. For the purposes of this
   * computation, if a message does not have an event time, we use the publish
   * time. The timestamp will be unset if there are no messages.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp minimum_event_time = 4;</code>
   */
  com.google.protobuf.TimestampOrBuilder getMinimumEventTimeOrBuilder();
}
