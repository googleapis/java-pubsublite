/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/pubsublite/v1/publisher.proto

package com.google.cloud.pubsublite.proto;

public interface MessagePublishResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.pubsublite.v1.MessagePublishResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The cursor of the first published message in the batch. The cursors for any
   * remaining messages in the batch are guaranteed to be sequential.
   * </pre>
   *
   * <code>.google.cloud.pubsublite.v1.Cursor start_cursor = 1;</code>
   *
   * @return Whether the startCursor field is set.
   */
  boolean hasStartCursor();
  /**
   *
   *
   * <pre>
   * The cursor of the first published message in the batch. The cursors for any
   * remaining messages in the batch are guaranteed to be sequential.
   * </pre>
   *
   * <code>.google.cloud.pubsublite.v1.Cursor start_cursor = 1;</code>
   *
   * @return The startCursor.
   */
  com.google.cloud.pubsublite.proto.Cursor getStartCursor();
  /**
   *
   *
   * <pre>
   * The cursor of the first published message in the batch. The cursors for any
   * remaining messages in the batch are guaranteed to be sequential.
   * </pre>
   *
   * <code>.google.cloud.pubsublite.v1.Cursor start_cursor = 1;</code>
   */
  com.google.cloud.pubsublite.proto.CursorOrBuilder getStartCursorOrBuilder();

  /**
   *
   *
   * <pre>
   * Cursors for messages published in the batch. There will exist multiple
   * ranges when cursors are not contiguous within the batch.
   *
   * The cursor ranges may not account for all messages in the batch when
   * publish idempotency is enabled. A missing range indicates that cursors
   * could not be determined for messages within the range, as they were
   * deduplicated and the necessary data was not available at publish time.
   * These messages will have offsets when received by a subscriber.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.pubsublite.v1.MessagePublishResponse.CursorRange cursor_ranges = 2;
   * </code>
   */
  java.util.List<com.google.cloud.pubsublite.proto.MessagePublishResponse.CursorRange>
      getCursorRangesList();
  /**
   *
   *
   * <pre>
   * Cursors for messages published in the batch. There will exist multiple
   * ranges when cursors are not contiguous within the batch.
   *
   * The cursor ranges may not account for all messages in the batch when
   * publish idempotency is enabled. A missing range indicates that cursors
   * could not be determined for messages within the range, as they were
   * deduplicated and the necessary data was not available at publish time.
   * These messages will have offsets when received by a subscriber.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.pubsublite.v1.MessagePublishResponse.CursorRange cursor_ranges = 2;
   * </code>
   */
  com.google.cloud.pubsublite.proto.MessagePublishResponse.CursorRange getCursorRanges(int index);
  /**
   *
   *
   * <pre>
   * Cursors for messages published in the batch. There will exist multiple
   * ranges when cursors are not contiguous within the batch.
   *
   * The cursor ranges may not account for all messages in the batch when
   * publish idempotency is enabled. A missing range indicates that cursors
   * could not be determined for messages within the range, as they were
   * deduplicated and the necessary data was not available at publish time.
   * These messages will have offsets when received by a subscriber.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.pubsublite.v1.MessagePublishResponse.CursorRange cursor_ranges = 2;
   * </code>
   */
  int getCursorRangesCount();
  /**
   *
   *
   * <pre>
   * Cursors for messages published in the batch. There will exist multiple
   * ranges when cursors are not contiguous within the batch.
   *
   * The cursor ranges may not account for all messages in the batch when
   * publish idempotency is enabled. A missing range indicates that cursors
   * could not be determined for messages within the range, as they were
   * deduplicated and the necessary data was not available at publish time.
   * These messages will have offsets when received by a subscriber.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.pubsublite.v1.MessagePublishResponse.CursorRange cursor_ranges = 2;
   * </code>
   */
  java.util.List<
          ? extends com.google.cloud.pubsublite.proto.MessagePublishResponse.CursorRangeOrBuilder>
      getCursorRangesOrBuilderList();
  /**
   *
   *
   * <pre>
   * Cursors for messages published in the batch. There will exist multiple
   * ranges when cursors are not contiguous within the batch.
   *
   * The cursor ranges may not account for all messages in the batch when
   * publish idempotency is enabled. A missing range indicates that cursors
   * could not be determined for messages within the range, as they were
   * deduplicated and the necessary data was not available at publish time.
   * These messages will have offsets when received by a subscriber.
   * </pre>
   *
   * <code>
   * repeated .google.cloud.pubsublite.v1.MessagePublishResponse.CursorRange cursor_ranges = 2;
   * </code>
   */
  com.google.cloud.pubsublite.proto.MessagePublishResponse.CursorRangeOrBuilder
      getCursorRangesOrBuilder(int index);
}
